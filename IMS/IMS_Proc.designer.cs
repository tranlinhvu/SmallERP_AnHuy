#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SmallERP_AnHuy")]
	public partial class IMS_ProcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInventory1(Inventory1 instance);
    partial void UpdateInventory1(Inventory1 instance);
    partial void DeleteInventory1(Inventory1 instance);
    #endregion
		
		public IMS_ProcDataContext() : 
				base(global::IMS.Properties.Settings.Default.SmallERPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IMS_ProcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMS_ProcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMS_ProcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMS_ProcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Inventory1> Inventory1s
		{
			get
			{
				return this.GetTable<Inventory1>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcInsertProduct")]
		public int ProcInsertProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(250)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(250)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefNo", DbType="NVarChar(250)")] string refNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefNoLenth", DbType="Int")] System.Nullable<int> refNoLenth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceIn", DbType="Money")] System.Nullable<decimal> priceIn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceOut", DbType="Money")] System.Nullable<decimal> priceOut, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnitName", DbType="NVarChar(250)")] string unitName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductKindName", DbType="NVarChar(250)")] string productKindName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductGroupName", DbType="NVarChar(250)")] string productGroupName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufactureName", DbType="NVarChar(250)")] string manufactureName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpiryRule", DbType="NVarChar(250)")] string expiryRule, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LottNoRule", DbType="NVarChar(250)")] string lottNoRule, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockLimit", DbType="Int")] System.Nullable<int> stockLimit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpiryLimit", DbType="Int")] System.Nullable<int> expiryLimit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), code, name, refNo, refNoLenth, priceIn, priceOut, unitName, productKindName, productGroupName, manufactureName, expiryRule, lottNoRule, stockLimit, expiryLimit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcGetCodeFromRefNo")]
		public int ProcGetCodeFromRefNo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefNo", DbType="NVarChar(250)")] string refNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(250)")] ref string code)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), refNo, code);
			code = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcUpdateIsDone")]
		public int ProcUpdateIsDone([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="NVarChar(50)")] string tableName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Bit")] System.Nullable<bool> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName, id, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcIsExistInventoryInputItem")]
		public ISingleResult<ProcIsExistInventoryInputItemResult> ProcIsExistInventoryInputItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodeEx", DbType="NVarChar(250)")] string codeEx, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="NVarChar(1)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), codeEx, result);
			result = ((string)(result1.GetParameterValue(1)));
			return ((ISingleResult<ProcIsExistInventoryInputItemResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcGetTotalQuantityInventoryInput")]
		public int ProcGetTotalQuantityInventoryInput([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProductPurchase", DbType="BigInt")] System.Nullable<long> idProductPurchase, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalQuantity", DbType="NVarChar(256)")] ref string totalQuantity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProductPurchase, totalQuantity);
			totalQuantity = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcUpdateCustomerCreditLimit")]
		public ISingleResult<ProcUpdateCustomerCreditLimitResult> ProcUpdateCustomerCreditLimit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCustomer", DbType="BigInt")] System.Nullable<long> idCustomer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProduct", DbType="BigInt")] System.Nullable<long> idProduct, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="BigInt")] System.Nullable<long> quantity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCustomer, idProduct, quantity);
			return ((ISingleResult<ProcUpdateCustomerCreditLimitResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcInsertCustomer")]
		public ISingleResult<ProcInsertCustomerResult> ProcInsertCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(250)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOfBirth", DbType="NVarChar(250)")] string dateOfBirth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProvince", DbType="Int")] System.Nullable<int> idProvince, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDistrict", DbType="Int")] System.Nullable<int> idDistrict, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdWard", DbType="Int")] System.Nullable<int> idWard, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(250)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ocupation", DbType="NVarChar(250)")] string ocupation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(250)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="NVarChar(250)")] string phone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, dateOfBirth, idProvince, idDistrict, idWard, address, ocupation, email, phone);
			return ((ISingleResult<ProcInsertCustomerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcInsertProductKind")]
		public ISingleResult<ProcInsertProductKindResult> ProcInsertProductKind([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(50)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsColorDiff", DbType="Bit")] System.Nullable<bool> isColorDiff)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, code, isColorDiff);
			return ((ISingleResult<ProcInsertProductKindResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcUpdateSalePrice")]
		public int ProcUpdateSalePrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(50)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Money")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuantityDiscount", DbType="Real")] System.Nullable<float> quantityDiscount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdSale", DbType="BigInt")] System.Nullable<long> idSale)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), code, price, quantityDiscount, idSale);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private System.Nullable<long> _DiffNo;
		
		private string _CodeEx;
		
		private System.Data.Linq.Binary _Barcode;
		
		private System.Nullable<long> _Expiry;
		
		private string _ExpiryEx;
		
		private string _LottNo;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private System.Nullable<long> _PriceIn;
		
		private System.Nullable<long> _IdInvoice;
		
		private System.Nullable<long> _IdInvoiceOut;
		
		private System.Nullable<int> _IdInventoryStorage;
		
		private System.Nullable<bool> _IsOutput;
		
		private System.Nullable<bool> _IsGiven;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDiffNoChanging(System.Nullable<long> value);
    partial void OnDiffNoChanged();
    partial void OnCodeExChanging(string value);
    partial void OnCodeExChanged();
    partial void OnBarcodeChanging(System.Data.Linq.Binary value);
    partial void OnBarcodeChanged();
    partial void OnExpiryChanging(System.Nullable<long> value);
    partial void OnExpiryChanged();
    partial void OnExpiryExChanging(string value);
    partial void OnExpiryExChanged();
    partial void OnLottNoChanging(string value);
    partial void OnLottNoChanged();
    partial void OnCreatedDateChanging(System.Nullable<long> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedDateExChanging(string value);
    partial void OnCreatedDateExChanged();
    partial void OnPriceInChanging(System.Nullable<long> value);
    partial void OnPriceInChanged();
    partial void OnIdInvoiceChanging(System.Nullable<long> value);
    partial void OnIdInvoiceChanged();
    partial void OnIdInvoiceOutChanging(System.Nullable<long> value);
    partial void OnIdInvoiceOutChanged();
    partial void OnIdInventoryStorageChanging(System.Nullable<int> value);
    partial void OnIdInventoryStorageChanged();
    partial void OnIsOutputChanging(System.Nullable<bool> value);
    partial void OnIsOutputChanged();
    partial void OnIsGivenChanging(System.Nullable<bool> value);
    partial void OnIsGivenChanged();
    #endregion
		
		public Inventory1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(250)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="BigInt")]
		public System.Nullable<long> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(250)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this.OnCodeExChanging(value);
					this.SendPropertyChanging();
					this._CodeEx = value;
					this.SendPropertyChanged("CodeEx");
					this.OnCodeExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Binary(1024)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiry", DbType="BigInt")]
		public System.Nullable<long> Expiry
		{
			get
			{
				return this._Expiry;
			}
			set
			{
				if ((this._Expiry != value))
				{
					this.OnExpiryChanging(value);
					this.SendPropertyChanging();
					this._Expiry = value;
					this.SendPropertyChanged("Expiry");
					this.OnExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryEx", DbType="NVarChar(250)")]
		public string ExpiryEx
		{
			get
			{
				return this._ExpiryEx;
			}
			set
			{
				if ((this._ExpiryEx != value))
				{
					this.OnExpiryExChanging(value);
					this.SendPropertyChanging();
					this._ExpiryEx = value;
					this.SendPropertyChanged("ExpiryEx");
					this.OnExpiryExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LottNo", DbType="NVarChar(50)")]
		public string LottNo
		{
			get
			{
				return this._LottNo;
			}
			set
			{
				if ((this._LottNo != value))
				{
					this.OnLottNoChanging(value);
					this.SendPropertyChanging();
					this._LottNo = value;
					this.SendPropertyChanged("LottNo");
					this.OnLottNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(250)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this.OnCreatedDateExChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateEx = value;
					this.SendPropertyChanged("CreatedDateEx");
					this.OnCreatedDateExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="BigInt")]
		public System.Nullable<long> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this.OnPriceInChanging(value);
					this.SendPropertyChanging();
					this._PriceIn = value;
					this.SendPropertyChanged("PriceIn");
					this.OnPriceInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInvoice", DbType="BigInt")]
		public System.Nullable<long> IdInvoice
		{
			get
			{
				return this._IdInvoice;
			}
			set
			{
				if ((this._IdInvoice != value))
				{
					this.OnIdInvoiceChanging(value);
					this.SendPropertyChanging();
					this._IdInvoice = value;
					this.SendPropertyChanged("IdInvoice");
					this.OnIdInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInvoiceOut", DbType="BigInt")]
		public System.Nullable<long> IdInvoiceOut
		{
			get
			{
				return this._IdInvoiceOut;
			}
			set
			{
				if ((this._IdInvoiceOut != value))
				{
					this.OnIdInvoiceOutChanging(value);
					this.SendPropertyChanging();
					this._IdInvoiceOut = value;
					this.SendPropertyChanged("IdInvoiceOut");
					this.OnIdInvoiceOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInventoryStorage", DbType="Int")]
		public System.Nullable<int> IdInventoryStorage
		{
			get
			{
				return this._IdInventoryStorage;
			}
			set
			{
				if ((this._IdInventoryStorage != value))
				{
					this.OnIdInventoryStorageChanging(value);
					this.SendPropertyChanging();
					this._IdInventoryStorage = value;
					this.SendPropertyChanged("IdInventoryStorage");
					this.OnIdInventoryStorageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutput", DbType="Bit")]
		public System.Nullable<bool> IsOutput
		{
			get
			{
				return this._IsOutput;
			}
			set
			{
				if ((this._IsOutput != value))
				{
					this.OnIsOutputChanging(value);
					this.SendPropertyChanging();
					this._IsOutput = value;
					this.SendPropertyChanged("IsOutput");
					this.OnIsOutputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGiven", DbType="Bit")]
		public System.Nullable<bool> IsGiven
		{
			get
			{
				return this._IsGiven;
			}
			set
			{
				if ((this._IsGiven != value))
				{
					this.OnIsGivenChanging(value);
					this.SendPropertyChanging();
					this._IsGiven = value;
					this.SendPropertyChanged("IsGiven");
					this.OnIsGivenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ProcIsExistInventoryInputItemResult
	{
		
		private long _Id;
		
		private string _Code;
		
		private System.Nullable<long> _DiffNo;
		
		private string _CodeEx;
		
		private System.Data.Linq.Binary _Barcode;
		
		private System.Nullable<bool> _Expiry;
		
		private string _ExpiryEx;
		
		private string _LottNo;
		
		private System.Nullable<long> _PriceIn;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<long> _IdProductPurchase;
		
		public ProcIsExistInventoryInputItemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="BigInt")]
		public System.Nullable<long> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this._DiffNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(50)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this._CodeEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Binary(50)")]
		public System.Data.Linq.Binary Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiry", DbType="Bit")]
		public System.Nullable<bool> Expiry
		{
			get
			{
				return this._Expiry;
			}
			set
			{
				if ((this._Expiry != value))
				{
					this._Expiry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryEx", DbType="NVarChar(250)")]
		public string ExpiryEx
		{
			get
			{
				return this._ExpiryEx;
			}
			set
			{
				if ((this._ExpiryEx != value))
				{
					this._ExpiryEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LottNo", DbType="NVarChar(50)")]
		public string LottNo
		{
			get
			{
				return this._LottNo;
			}
			set
			{
				if ((this._LottNo != value))
				{
					this._LottNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="BigInt")]
		public System.Nullable<long> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this._PriceIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductPurchase", DbType="BigInt")]
		public System.Nullable<long> IdProductPurchase
		{
			get
			{
				return this._IdProductPurchase;
			}
			set
			{
				if ((this._IdProductPurchase != value))
				{
					this._IdProductPurchase = value;
				}
			}
		}
	}
	
	public partial class ProcUpdateCustomerCreditLimitResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _IdCustomer;
		
		private System.Nullable<long> _IdProduct;
		
		private System.Nullable<int> _Quantity;
		
		public ProcUpdateCustomerCreditLimitResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="BigInt")]
		public System.Nullable<long> IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this._IdCustomer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="BigInt")]
		public System.Nullable<long> IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this._IdProduct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
	}
	
	public partial class ProcInsertCustomerResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _DateOfBirth;
		
		private int _IdProvince;
		
		private int _IdDistrict;
		
		private int _IdWard;
		
		private string _Address;
		
		private string _Ocupation;
		
		private string _Email;
		
		private string _Phone;
		
		public ProcInsertCustomerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="NVarChar(50)")]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this._DateOfBirth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProvince", DbType="Int NOT NULL")]
		public int IdProvince
		{
			get
			{
				return this._IdProvince;
			}
			set
			{
				if ((this._IdProvince != value))
				{
					this._IdProvince = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDistrict", DbType="Int NOT NULL")]
		public int IdDistrict
		{
			get
			{
				return this._IdDistrict;
			}
			set
			{
				if ((this._IdDistrict != value))
				{
					this._IdDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdWard", DbType="Int NOT NULL")]
		public int IdWard
		{
			get
			{
				return this._IdWard;
			}
			set
			{
				if ((this._IdWard != value))
				{
					this._IdWard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocupation", DbType="NVarChar(250)")]
		public string Ocupation
		{
			get
			{
				return this._Ocupation;
			}
			set
			{
				if ((this._Ocupation != value))
				{
					this._Ocupation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
	}
	
	public partial class ProcInsertProductKindResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<bool> _IsColorDiff;
		
		public ProcInsertProductKindResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(5)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColorDiff", DbType="Bit")]
		public System.Nullable<bool> IsColorDiff
		{
			get
			{
				return this._IsColorDiff;
			}
			set
			{
				if ((this._IsColorDiff != value))
				{
					this._IsColorDiff = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
