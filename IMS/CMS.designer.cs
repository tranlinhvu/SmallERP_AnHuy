#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SmallERP_HuongTrinh")]
	public partial class IMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertServiceGroup(ServiceGroup instance);
    partial void UpdateServiceGroup(ServiceGroup instance);
    partial void DeleteServiceGroup(ServiceGroup instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertServiceDetail(ServiceDetail instance);
    partial void UpdateServiceDetail(ServiceDetail instance);
    partial void DeleteServiceDetail(ServiceDetail instance);
    partial void InsertProductGroup(ProductGroup instance);
    partial void UpdateProductGroup(ProductGroup instance);
    partial void DeleteProductGroup(ProductGroup instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    partial void InsertStaffGroup(StaffGroup instance);
    partial void UpdateStaffGroup(StaffGroup instance);
    partial void DeleteStaffGroup(StaffGroup instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertWard(Ward instance);
    partial void UpdateWard(Ward instance);
    partial void DeleteWard(Ward instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertEquipment(Equipment instance);
    partial void UpdateEquipment(Equipment instance);
    partial void DeleteEquipment(Equipment instance);
    partial void InsertEquipmentGroup(EquipmentGroup instance);
    partial void UpdateEquipmentGroup(EquipmentGroup instance);
    partial void DeleteEquipmentGroup(EquipmentGroup instance);
    partial void InsertServiceSaleItem(ServiceSaleItem instance);
    partial void UpdateServiceSaleItem(ServiceSaleItem instance);
    partial void DeleteServiceSaleItem(ServiceSaleItem instance);
    partial void InsertMUser(MUser instance);
    partial void UpdateMUser(MUser instance);
    partial void DeleteMUser(MUser instance);
    partial void InsertObjectCareDetail(ObjectCareDetail instance);
    partial void UpdateObjectCareDetail(ObjectCareDetail instance);
    partial void DeleteObjectCareDetail(ObjectCareDetail instance);
    partial void InsertObjectCare(ObjectCare instance);
    partial void UpdateObjectCare(ObjectCare instance);
    partial void DeleteObjectCare(ObjectCare instance);
    partial void InsertProductSize(ProductSize instance);
    partial void UpdateProductSize(ProductSize instance);
    partial void DeleteProductSize(ProductSize instance);
    partial void InsertManufacture(Manufacture instance);
    partial void UpdateManufacture(Manufacture instance);
    partial void DeleteManufacture(Manufacture instance);
    partial void InsertInventoryStorage(InventoryStorage instance);
    partial void UpdateInventoryStorage(InventoryStorage instance);
    partial void DeleteInventoryStorage(InventoryStorage instance);
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertInventoryInputItem(InventoryInputItem instance);
    partial void UpdateInventoryInputItem(InventoryInputItem instance);
    partial void DeleteInventoryInputItem(InventoryInputItem instance);
    partial void InsertProductPurchaseItem(ProductPurchaseItem instance);
    partial void UpdateProductPurchaseItem(ProductPurchaseItem instance);
    partial void DeleteProductPurchaseItem(ProductPurchaseItem instance);
    partial void InsertProductColor(ProductColor instance);
    partial void UpdateProductColor(ProductColor instance);
    partial void DeleteProductColor(ProductColor instance);
    partial void InsertProductSale(ProductSale instance);
    partial void UpdateProductSale(ProductSale instance);
    partial void DeleteProductSale(ProductSale instance);
    partial void InsertProductPurchase(ProductPurchase instance);
    partial void UpdateProductPurchase(ProductPurchase instance);
    partial void DeleteProductPurchase(ProductPurchase instance);
    partial void InsertInventoryOutputItem(InventoryOutputItem instance);
    partial void UpdateInventoryOutputItem(InventoryOutputItem instance);
    partial void DeleteInventoryOutputItem(InventoryOutputItem instance);
    partial void InsertProductSaleItem(ProductSaleItem instance);
    partial void UpdateProductSaleItem(ProductSaleItem instance);
    partial void DeleteProductSaleItem(ProductSaleItem instance);
    #endregion
		
		public IMSDataContext() : 
				base(global::IMS.Properties.Settings.Default.SmallERPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ServiceGroup> ServiceGroups
		{
			get
			{
				return this.GetTable<ServiceGroup>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDetail> ServiceDetails
		{
			get
			{
				return this.GetTable<ServiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<ProductGroup> ProductGroups
		{
			get
			{
				return this.GetTable<ProductGroup>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<ServiceView> ServiceViews
		{
			get
			{
				return this.GetTable<ServiceView>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<StaffGroup> StaffGroups
		{
			get
			{
				return this.GetTable<StaffGroup>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<Ward> Wards
		{
			get
			{
				return this.GetTable<Ward>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerView> CustomerViews
		{
			get
			{
				return this.GetTable<CustomerView>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<StaffView> StaffViews
		{
			get
			{
				return this.GetTable<StaffView>();
			}
		}
		
		public System.Data.Linq.Table<Equipment> Equipments
		{
			get
			{
				return this.GetTable<Equipment>();
			}
		}
		
		public System.Data.Linq.Table<EquipmentView> EquipmentViews
		{
			get
			{
				return this.GetTable<EquipmentView>();
			}
		}
		
		public System.Data.Linq.Table<EquipmentGroup> EquipmentGroups
		{
			get
			{
				return this.GetTable<EquipmentGroup>();
			}
		}
		
		public System.Data.Linq.Table<ServiceSaleItem> ServiceSaleItems
		{
			get
			{
				return this.GetTable<ServiceSaleItem>();
			}
		}
		
		public System.Data.Linq.Table<ObjectCareDetailView> ObjectCareDetailViews
		{
			get
			{
				return this.GetTable<ObjectCareDetailView>();
			}
		}
		
		public System.Data.Linq.Table<ProductSaleView> ProductSaleViews
		{
			get
			{
				return this.GetTable<ProductSaleView>();
			}
		}
		
		public System.Data.Linq.Table<UserView> UserViews
		{
			get
			{
				return this.GetTable<UserView>();
			}
		}
		
		public System.Data.Linq.Table<MUser> MUsers
		{
			get
			{
				return this.GetTable<MUser>();
			}
		}
		
		public System.Data.Linq.Table<ObjectCareDetail> ObjectCareDetails
		{
			get
			{
				return this.GetTable<ObjectCareDetail>();
			}
		}
		
		public System.Data.Linq.Table<ObjectCare> ObjectCares
		{
			get
			{
				return this.GetTable<ObjectCare>();
			}
		}
		
		public System.Data.Linq.Table<ProductColorView> ProductColorViews
		{
			get
			{
				return this.GetTable<ProductColorView>();
			}
		}
		
		public System.Data.Linq.Table<ProductKindView> ProductKindViews
		{
			get
			{
				return this.GetTable<ProductKindView>();
			}
		}
		
		public System.Data.Linq.Table<ProductSizeView> ProductSizeViews
		{
			get
			{
				return this.GetTable<ProductSizeView>();
			}
		}
		
		public System.Data.Linq.Table<ProductSize> ProductSizes
		{
			get
			{
				return this.GetTable<ProductSize>();
			}
		}
		
		public System.Data.Linq.Table<Manufacture> Manufactures
		{
			get
			{
				return this.GetTable<Manufacture>();
			}
		}
		
		public System.Data.Linq.Table<ManufactureView> ManufactureViews
		{
			get
			{
				return this.GetTable<ManufactureView>();
			}
		}
		
		public System.Data.Linq.Table<InventoryStorage> InventoryStorages
		{
			get
			{
				return this.GetTable<InventoryStorage>();
			}
		}
		
		public System.Data.Linq.Table<Inventory> Inventories
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductView> ProductViews
		{
			get
			{
				return this.GetTable<ProductView>();
			}
		}
		
		public System.Data.Linq.Table<InventoryInputItem> InventoryInputItems
		{
			get
			{
				return this.GetTable<InventoryInputItem>();
			}
		}
		
		public System.Data.Linq.Table<ProductPurchaseItem> ProductPurchaseItems
		{
			get
			{
				return this.GetTable<ProductPurchaseItem>();
			}
		}
		
		public System.Data.Linq.Table<ProductColor> ProductColors
		{
			get
			{
				return this.GetTable<ProductColor>();
			}
		}
		
		public System.Data.Linq.Table<ServiceSaleItemView> ServiceSaleItemViews
		{
			get
			{
				return this.GetTable<ServiceSaleItemView>();
			}
		}
		
		public System.Data.Linq.Table<ProductSale> ProductSales
		{
			get
			{
				return this.GetTable<ProductSale>();
			}
		}
		
		public System.Data.Linq.Table<ProductPurchaseItemView> ProductPurchaseItemViews
		{
			get
			{
				return this.GetTable<ProductPurchaseItemView>();
			}
		}
		
		public System.Data.Linq.Table<ProductKindColorView> ProductKindColorViews
		{
			get
			{
				return this.GetTable<ProductKindColorView>();
			}
		}
		
		public System.Data.Linq.Table<InventoryView> InventoryViews
		{
			get
			{
				return this.GetTable<InventoryView>();
			}
		}
		
		public System.Data.Linq.Table<ProductPurchase> ProductPurchases
		{
			get
			{
				return this.GetTable<ProductPurchase>();
			}
		}
		
		public System.Data.Linq.Table<ProductPurchaseView> ProductPurchaseViews
		{
			get
			{
				return this.GetTable<ProductPurchaseView>();
			}
		}
		
		public System.Data.Linq.Table<InventoryOutputItem> InventoryOutputItems
		{
			get
			{
				return this.GetTable<InventoryOutputItem>();
			}
		}
		
		public System.Data.Linq.Table<ProductSaleItem> ProductSaleItems
		{
			get
			{
				return this.GetTable<ProductSaleItem>();
			}
		}
		
		public System.Data.Linq.Table<InventoryOutputItemGroupView> InventoryOutputItemGroupViews
		{
			get
			{
				return this.GetTable<InventoryOutputItemGroupView>();
			}
		}
		
		public System.Data.Linq.Table<InventoryOutputItemView> InventoryOutputItemViews
		{
			get
			{
				return this.GetTable<InventoryOutputItemView>();
			}
		}
		
		public System.Data.Linq.Table<ProductSaleItemView> ProductSaleItemViews
		{
			get
			{
				return this.GetTable<ProductSaleItemView>();
			}
		}
		
		public System.Data.Linq.Table<ProductSaleItemView1> ProductSaleItemView1s
		{
			get
			{
				return this.GetTable<ProductSaleItemView1>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteService")]
		public int ProcDeleteService([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdService", DbType="Int")] System.Nullable<int> idService)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idService);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcLogin")]
		public int ProcLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="NVarChar(50)")] string key)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, key);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteObjectCare")]
		public int ProcDeleteObjectCare([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdObjectCare", DbType="Int")] System.Nullable<int> idObjectCare)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idObjectCare);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteObjectCareDetail")]
		public int ProcDeleteObjectCareDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdObjectCareDetail", DbType="Int")] System.Nullable<int> idObjectCareDetail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idObjectCareDetail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteProductSaleItem")]
		public int ProcDeleteProductSaleItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProductSaleItem", DbType="Int")] System.Nullable<int> idProductSaleItem)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProductSaleItem);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteServiceSaleItem")]
		public int ProcDeleteServiceSaleItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdServiceSaleItem", DbType="Int")] System.Nullable<int> idServiceSaleItem)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idServiceSaleItem);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteServiceGroup")]
		public int ProcDeleteServiceGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdServiceGroup", DbType="Int")] System.Nullable<int> idServiceGroup)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idServiceGroup);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteServiceDetail")]
		public int ProcDeleteServiceDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdServiceDetail", DbType="Int")] System.Nullable<int> idServiceDetail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idServiceDetail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteCustomer")]
		public int ProcDeleteCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCustomer", DbType="Int")] System.Nullable<int> idCustomer)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCustomer);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcGetDiffNo")]
		public int ProcGetDiffNo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCode", DbType="NVarChar(50)")] string productCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcUpdateIsDone")]
		public int ProcUpdateIsDone([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="NVarChar(50)")] string tableName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Bit")] System.Nullable<bool> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName, id, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcRemovePrintJob")]
		public int ProcRemovePrintJob([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPrinting", DbType="Bit")] System.Nullable<bool> isPrinting, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdObjectCareDetail", DbType="BigInt")] System.Nullable<long> idObjectCareDetail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isPrinting, idObjectCareDetail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcInvoiceNo")]
		public int ProcInvoiceNo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(50)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceType", DbType="NVarChar(50)")] string invoiceType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), code, invoiceType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteTable")]
		public int ProcDeleteTable([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="NVarChar(50)")] string tableName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName, id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcGetUnitName")]
		public int ProcGetUnitName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCode", DbType="NVarChar(50)")] string productCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcDeleteProductPurchaseItem")]
		public int ProcDeleteProductPurchaseItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProductPurchaseItem", DbType="Int")] System.Nullable<int> idProductPurchaseItem, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Real")] System.Nullable<float> quantity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProductPurchaseItem, quantity);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcUpdateSalePrice")]
		public int ProcUpdateSalePrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(50)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Money")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdSale", DbType="BigInt")] System.Nullable<long> idSale)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), code, price, idSale);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcInsertProductKindColor")]
		public int ProcInsertProductKindColor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProductKind", DbType="Int")] System.Nullable<int> idProductKind, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ColorName", DbType="NVarChar(50)")] string colorName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ColorCode", DbType="NVarChar(50)")] string colorCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProductKind, colorName, colorCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcCopyProductColor")]
		public int ProcCopyProductColor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProductKindSource", DbType="Int")] System.Nullable<int> idProductKindSource, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProductKindDestination", DbType="Int")] System.Nullable<int> idProductKindDestination)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProductKindSource, idProductKindDestination);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcRefreshDB")]
		public int ProcRefreshDB()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcIsEditProduct")]
		public ISingleResult<ProcIsEditProductResult> ProcIsEditProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdProduct", DbType="Int")] System.Nullable<int> idProduct)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProduct);
			return ((ISingleResult<ProcIsEditProductResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcIsAddProduct")]
		public ISingleResult<ProcIsAddProductResult> ProcIsAddProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(50)")] string code)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), code);
			return ((ISingleResult<ProcIsAddProductResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcGenerateProducts")]
		public ISingleResult<ProcGenerateProductsResult> ProcGenerateProducts()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProcGenerateProductsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceGroup")]
	public partial class ServiceGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public ServiceGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(150)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _IdServiceGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnIdServiceGroupChanging(System.Nullable<int> value);
    partial void OnIdServiceGroupChanged();
    #endregion
		
		public Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(150)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdServiceGroup", DbType="Int")]
		public System.Nullable<int> IdServiceGroup
		{
			get
			{
				return this._IdServiceGroup;
			}
			set
			{
				if ((this._IdServiceGroup != value))
				{
					this.OnIdServiceGroupChanging(value);
					this.SendPropertyChanging();
					this._IdServiceGroup = value;
					this.SendPropertyChanged("IdServiceGroup");
					this.OnIdServiceGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDetail")]
	public partial class ServiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
		private System.Nullable<bool> _IsCheck;
		
		private int _IdService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnIsCheckChanging(System.Nullable<bool> value);
    partial void OnIsCheckChanged();
    partial void OnIdServiceChanging(int value);
    partial void OnIdServiceChanged();
    #endregion
		
		public ServiceDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(150)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheck", DbType="Bit")]
		public System.Nullable<bool> IsCheck
		{
			get
			{
				return this._IsCheck;
			}
			set
			{
				if ((this._IsCheck != value))
				{
					this.OnIsCheckChanging(value);
					this.SendPropertyChanging();
					this._IsCheck = value;
					this.SendPropertyChanged("IsCheck");
					this.OnIsCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdService", DbType="Int NOT NULL")]
		public int IdService
		{
			get
			{
				return this._IdService;
			}
			set
			{
				if ((this._IdService != value))
				{
					this.OnIdServiceChanging(value);
					this.SendPropertyChanging();
					this._IdService = value;
					this.SendPropertyChanged("IdService");
					this.OnIdServiceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductGroup")]
	public partial class ProductGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public ProductGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceView")]
	public partial class ServiceView
	{
		
		private int _Id;
		
		private string _Name;
		
		private int _IdServiceGroup;
		
		public ServiceView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(303) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdServiceGroup", DbType="Int NOT NULL")]
		public int IdServiceGroup
		{
			get
			{
				return this._IdServiceGroup;
			}
			set
			{
				if ((this._IdServiceGroup != value))
				{
					this._IdServiceGroup = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroup")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public UserGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffGroup")]
	public partial class StaffGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public StaffGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Address;
		
		private string _Country;
		
		private string _Email;
		
		private string _Phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Vendor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.District")]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _idProvince;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnidProvinceChanging(int value);
    partial void OnidProvinceChanged();
    #endregion
		
		public District()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvince", DbType="Int NOT NULL")]
		public int idProvince
		{
			get
			{
				return this._idProvince;
			}
			set
			{
				if ((this._idProvince != value))
				{
					this.OnidProvinceChanging(value);
					this.SendPropertyChanging();
					this._idProvince = value;
					this.SendPropertyChanged("idProvince");
					this.OnidProvinceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ward")]
	public partial class Ward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _IdDistrict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdDistrictChanging(int value);
    partial void OnIdDistrictChanged();
    #endregion
		
		public Ward()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDistrict", DbType="Int NOT NULL")]
		public int IdDistrict
		{
			get
			{
				return this._IdDistrict;
			}
			set
			{
				if ((this._IdDistrict != value))
				{
					this.OnIdDistrictChanging(value);
					this.SendPropertyChanging();
					this._IdDistrict = value;
					this.SendPropertyChanged("IdDistrict");
					this.OnIdDistrictChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _DateOfBirth;
		
		private int _IdProvince;
		
		private int _IdDistrict;
		
		private int _IdWard;
		
		private string _Address;
		
		private string _Ocupation;
		
		private string _Email;
		
		private string _Phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateOfBirthChanging(string value);
    partial void OnDateOfBirthChanged();
    partial void OnIdProvinceChanging(int value);
    partial void OnIdProvinceChanged();
    partial void OnIdDistrictChanging(int value);
    partial void OnIdDistrictChanged();
    partial void OnIdWardChanging(int value);
    partial void OnIdWardChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnOcupationChanging(string value);
    partial void OnOcupationChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="NVarChar(50)")]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProvince", DbType="Int NOT NULL")]
		public int IdProvince
		{
			get
			{
				return this._IdProvince;
			}
			set
			{
				if ((this._IdProvince != value))
				{
					this.OnIdProvinceChanging(value);
					this.SendPropertyChanging();
					this._IdProvince = value;
					this.SendPropertyChanged("IdProvince");
					this.OnIdProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDistrict", DbType="Int NOT NULL")]
		public int IdDistrict
		{
			get
			{
				return this._IdDistrict;
			}
			set
			{
				if ((this._IdDistrict != value))
				{
					this.OnIdDistrictChanging(value);
					this.SendPropertyChanging();
					this._IdDistrict = value;
					this.SendPropertyChanged("IdDistrict");
					this.OnIdDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdWard", DbType="Int NOT NULL")]
		public int IdWard
		{
			get
			{
				return this._IdWard;
			}
			set
			{
				if ((this._IdWard != value))
				{
					this.OnIdWardChanging(value);
					this.SendPropertyChanging();
					this._IdWard = value;
					this.SendPropertyChanged("IdWard");
					this.OnIdWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocupation", DbType="NVarChar(250)")]
		public string Ocupation
		{
			get
			{
				return this._Ocupation;
			}
			set
			{
				if ((this._Ocupation != value))
				{
					this.OnOcupationChanging(value);
					this.SendPropertyChanging();
					this._Ocupation = value;
					this.SendPropertyChanged("Ocupation");
					this.OnOcupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerView")]
	public partial class CustomerView
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _DateOfBirth;
		
		private string _Province;
		
		private string _District;
		
		private string _Ward;
		
		private string _Address;
		
		private string _Ocupation;
		
		private string _Email;
		
		private string _Phone;
		
		public CustomerView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="NVarChar(50)")]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this._DateOfBirth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ward", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ward
		{
			get
			{
				return this._Ward;
			}
			set
			{
				if ((this._Ward != value))
				{
					this._Ward = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocupation", DbType="NVarChar(250)")]
		public string Ocupation
		{
			get
			{
				return this._Ocupation;
			}
			set
			{
				if ((this._Ocupation != value))
				{
					this._Ocupation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Province")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Province()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _DateOfBirth;
		
		private int _IdProvince;
		
		private int _IdDistrict;
		
		private int _IdWard;
		
		private string _Address;
		
		private string _Ocupation;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<int> _IdStaffGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateOfBirthChanging(string value);
    partial void OnDateOfBirthChanged();
    partial void OnIdProvinceChanging(int value);
    partial void OnIdProvinceChanged();
    partial void OnIdDistrictChanging(int value);
    partial void OnIdDistrictChanged();
    partial void OnIdWardChanging(int value);
    partial void OnIdWardChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnOcupationChanging(string value);
    partial void OnOcupationChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnIdStaffGroupChanging(System.Nullable<int> value);
    partial void OnIdStaffGroupChanged();
    #endregion
		
		public Staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="NVarChar(50)")]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProvince", DbType="Int NOT NULL")]
		public int IdProvince
		{
			get
			{
				return this._IdProvince;
			}
			set
			{
				if ((this._IdProvince != value))
				{
					this.OnIdProvinceChanging(value);
					this.SendPropertyChanging();
					this._IdProvince = value;
					this.SendPropertyChanged("IdProvince");
					this.OnIdProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDistrict", DbType="Int NOT NULL")]
		public int IdDistrict
		{
			get
			{
				return this._IdDistrict;
			}
			set
			{
				if ((this._IdDistrict != value))
				{
					this.OnIdDistrictChanging(value);
					this.SendPropertyChanging();
					this._IdDistrict = value;
					this.SendPropertyChanged("IdDistrict");
					this.OnIdDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdWard", DbType="Int NOT NULL")]
		public int IdWard
		{
			get
			{
				return this._IdWard;
			}
			set
			{
				if ((this._IdWard != value))
				{
					this.OnIdWardChanging(value);
					this.SendPropertyChanging();
					this._IdWard = value;
					this.SendPropertyChanged("IdWard");
					this.OnIdWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocupation", DbType="NVarChar(250)")]
		public string Ocupation
		{
			get
			{
				return this._Ocupation;
			}
			set
			{
				if ((this._Ocupation != value))
				{
					this.OnOcupationChanging(value);
					this.SendPropertyChanging();
					this._Ocupation = value;
					this.SendPropertyChanged("Ocupation");
					this.OnOcupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaffGroup", DbType="Int")]
		public System.Nullable<int> IdStaffGroup
		{
			get
			{
				return this._IdStaffGroup;
			}
			set
			{
				if ((this._IdStaffGroup != value))
				{
					this.OnIdStaffGroupChanging(value);
					this.SendPropertyChanging();
					this._IdStaffGroup = value;
					this.SendPropertyChanged("IdStaffGroup");
					this.OnIdStaffGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffView")]
	public partial class StaffView
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _DateOfBirth;
		
		private string _Province;
		
		private string _District;
		
		private string _Ward;
		
		private string _Address;
		
		private string _Ocupation;
		
		private string _Email;
		
		private string _Phone;
		
		private string _StaffGroupName;
		
		public StaffView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="NVarChar(50)")]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this._DateOfBirth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ward", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ward
		{
			get
			{
				return this._Ward;
			}
			set
			{
				if ((this._Ward != value))
				{
					this._Ward = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocupation", DbType="NVarChar(250)")]
		public string Ocupation
		{
			get
			{
				return this._Ocupation;
			}
			set
			{
				if ((this._Ocupation != value))
				{
					this._Ocupation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StaffGroupName
		{
			get
			{
				return this._StaffGroupName;
			}
			set
			{
				if ((this._StaffGroupName != value))
				{
					this._StaffGroupName = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipment")]
	public partial class Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Standard;
		
		private System.Nullable<decimal> _PriceIn;
		
		private System.Nullable<decimal> _PriceOut;
		
		private int _IdUnit;
		
		private int _IdGroup;
		
		private int _IdManufacture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnPriceInChanging(System.Nullable<decimal> value);
    partial void OnPriceInChanged();
    partial void OnPriceOutChanging(System.Nullable<decimal> value);
    partial void OnPriceOutChanged();
    partial void OnIdUnitChanging(int value);
    partial void OnIdUnitChanged();
    partial void OnIdGroupChanging(int value);
    partial void OnIdGroupChanged();
    partial void OnIdManufactureChanging(int value);
    partial void OnIdManufactureChanged();
    #endregion
		
		public Equipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="Money")]
		public System.Nullable<decimal> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this.OnPriceInChanging(value);
					this.SendPropertyChanging();
					this._PriceIn = value;
					this.SendPropertyChanged("PriceIn");
					this.OnPriceInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this.OnPriceOutChanging(value);
					this.SendPropertyChanging();
					this._PriceOut = value;
					this.SendPropertyChanged("PriceOut");
					this.OnPriceOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUnit", DbType="Int NOT NULL")]
		public int IdUnit
		{
			get
			{
				return this._IdUnit;
			}
			set
			{
				if ((this._IdUnit != value))
				{
					this.OnIdUnitChanging(value);
					this.SendPropertyChanging();
					this._IdUnit = value;
					this.SendPropertyChanged("IdUnit");
					this.OnIdUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGroup", DbType="Int NOT NULL")]
		public int IdGroup
		{
			get
			{
				return this._IdGroup;
			}
			set
			{
				if ((this._IdGroup != value))
				{
					this.OnIdGroupChanging(value);
					this.SendPropertyChanging();
					this._IdGroup = value;
					this.SendPropertyChanged("IdGroup");
					this.OnIdGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdManufacture", DbType="Int NOT NULL")]
		public int IdManufacture
		{
			get
			{
				return this._IdManufacture;
			}
			set
			{
				if ((this._IdManufacture != value))
				{
					this.OnIdManufactureChanging(value);
					this.SendPropertyChanging();
					this._IdManufacture = value;
					this.SendPropertyChanged("IdManufacture");
					this.OnIdManufactureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipmentView")]
	public partial class EquipmentView
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Standard;
		
		private System.Nullable<decimal> _PriceIn;
		
		private System.Nullable<decimal> _PriceOut;
		
		private string _UnitName;
		
		private string _GroupName;
		
		private string _ManufactureName;
		
		public EquipmentView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this._Standard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="Money")]
		public System.Nullable<decimal> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this._PriceIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this._PriceOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureName", DbType="NVarChar(50)")]
		public string ManufactureName
		{
			get
			{
				return this._ManufactureName;
			}
			set
			{
				if ((this._ManufactureName != value))
				{
					this._ManufactureName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipmentGroup")]
	public partial class EquipmentGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public EquipmentGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceSaleItem")]
	public partial class ServiceSaleItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _IdService;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _IdObjectCareDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnIdServiceChanging(int value);
    partial void OnIdServiceChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnIdObjectCareDetailChanging(System.Nullable<int> value);
    partial void OnIdObjectCareDetailChanged();
    #endregion
		
		public ServiceSaleItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdService", DbType="Int NOT NULL")]
		public int IdService
		{
			get
			{
				return this._IdService;
			}
			set
			{
				if ((this._IdService != value))
				{
					this.OnIdServiceChanging(value);
					this.SendPropertyChanging();
					this._IdService = value;
					this.SendPropertyChanged("IdService");
					this.OnIdServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjectCareDetail", DbType="Int")]
		public System.Nullable<int> IdObjectCareDetail
		{
			get
			{
				return this._IdObjectCareDetail;
			}
			set
			{
				if ((this._IdObjectCareDetail != value))
				{
					this.OnIdObjectCareDetailChanging(value);
					this.SendPropertyChanging();
					this._IdObjectCareDetail = value;
					this.SendPropertyChanged("IdObjectCareDetail");
					this.OnIdObjectCareDetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectCareDetailView")]
	public partial class ObjectCareDetailView
	{
		
		private string _Code;
		
		private string _Name;
		
		private string _CreatedDate;
		
		private string _CareDate;
		
		private string _NextCareDate;
		
		private string _StaffName;
		
		private string _CarePersonName;
		
		private string _AssistanceName;
		
		private bool _IsDone;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _Discount;
		
		private System.Nullable<int> _Payment;
		
		private int _IdObjectCare;
		
		private int _IdCarePerson;
		
		private System.Nullable<int> _IdAssistance;
		
		private string _CustomerName;
		
		private int _Id;
		
		private System.Nullable<decimal> _ProductAmount;
		
		private System.Nullable<decimal> _ServiceAmount;
		
		private System.Nullable<decimal> _CareAmount;
		
		private System.Nullable<int> _Balance;
		
		public ObjectCareDetailView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareDate", DbType="NVarChar(50)")]
		public string CareDate
		{
			get
			{
				return this._CareDate;
			}
			set
			{
				if ((this._CareDate != value))
				{
					this._CareDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextCareDate", DbType="NVarChar(50)")]
		public string NextCareDate
		{
			get
			{
				return this._NextCareDate;
			}
			set
			{
				if ((this._NextCareDate != value))
				{
					this._NextCareDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this._StaffName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarePersonName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CarePersonName
		{
			get
			{
				return this._CarePersonName;
			}
			set
			{
				if ((this._CarePersonName != value))
				{
					this._CarePersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssistanceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssistanceName
		{
			get
			{
				return this._AssistanceName;
			}
			set
			{
				if ((this._AssistanceName != value))
				{
					this._AssistanceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit NOT NULL")]
		public bool IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this._IsDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int")]
		public System.Nullable<int> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Int")]
		public System.Nullable<int> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this._Payment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjectCare", DbType="Int NOT NULL")]
		public int IdObjectCare
		{
			get
			{
				return this._IdObjectCare;
			}
			set
			{
				if ((this._IdObjectCare != value))
				{
					this._IdObjectCare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCarePerson", DbType="Int NOT NULL")]
		public int IdCarePerson
		{
			get
			{
				return this._IdCarePerson;
			}
			set
			{
				if ((this._IdCarePerson != value))
				{
					this._IdCarePerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAssistance", DbType="Int")]
		public System.Nullable<int> IdAssistance
		{
			get
			{
				return this._IdAssistance;
			}
			set
			{
				if ((this._IdAssistance != value))
				{
					this._IdAssistance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductAmount", DbType="Money")]
		public System.Nullable<decimal> ProductAmount
		{
			get
			{
				return this._ProductAmount;
			}
			set
			{
				if ((this._ProductAmount != value))
				{
					this._ProductAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAmount", DbType="Money")]
		public System.Nullable<decimal> ServiceAmount
		{
			get
			{
				return this._ServiceAmount;
			}
			set
			{
				if ((this._ServiceAmount != value))
				{
					this._ServiceAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareAmount", DbType="Money")]
		public System.Nullable<decimal> CareAmount
		{
			get
			{
				return this._CareAmount;
			}
			set
			{
				if ((this._CareAmount != value))
				{
					this._CareAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSaleView")]
	public partial class ProductSaleView
	{
		
		private long _Id;
		
		private string _InvoiceNo;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private string _InvoiceDateEx;
		
		private System.Nullable<long> _IdStaff;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _Payment;
		
		private System.Nullable<bool> _IsDone;
		
		private string _CustomerName;
		
		public ProductSaleView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(50)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this._CreatedDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateEx", DbType="NVarChar(50)")]
		public string InvoiceDateEx
		{
			get
			{
				return this._InvoiceDateEx;
			}
			set
			{
				if ((this._InvoiceDateEx != value))
				{
					this._InvoiceDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="BigInt")]
		public System.Nullable<long> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this._IdStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Money")]
		public System.Nullable<decimal> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this._Payment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this._IsDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserView")]
	public partial class UserView
	{
		
		private System.Nullable<int> _IdUserGroup;
		
		private System.Nullable<int> _IdStaff;
		
		private int _Id;
		
		private string _Name;
		
		private string _Password;
		
		private string _UserGroupName;
		
		private string _StaffName;
		
		public UserView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserGroup", DbType="Int")]
		public System.Nullable<int> IdUserGroup
		{
			get
			{
				return this._IdUserGroup;
			}
			set
			{
				if ((this._IdUserGroup != value))
				{
					this._IdUserGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="Int")]
		public System.Nullable<int> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this._IdStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserGroupName
		{
			get
			{
				return this._UserGroupName;
			}
			set
			{
				if ((this._UserGroupName != value))
				{
					this._UserGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this._StaffName = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MUser")]
	public partial class MUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Password;
		
		private System.Nullable<int> _IdUserGroup;
		
		private System.Nullable<int> _IdStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIdUserGroupChanging(System.Nullable<int> value);
    partial void OnIdUserGroupChanged();
    partial void OnIdStaffChanging(System.Nullable<int> value);
    partial void OnIdStaffChanged();
    #endregion
		
		public MUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserGroup", DbType="Int")]
		public System.Nullable<int> IdUserGroup
		{
			get
			{
				return this._IdUserGroup;
			}
			set
			{
				if ((this._IdUserGroup != value))
				{
					this.OnIdUserGroupChanging(value);
					this.SendPropertyChanging();
					this._IdUserGroup = value;
					this.SendPropertyChanged("IdUserGroup");
					this.OnIdUserGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="Int")]
		public System.Nullable<int> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectCareDetail")]
	public partial class ObjectCareDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private System.Nullable<int> _DiffNo;
		
		private string _Name;
		
		private string _CreatedDate;
		
		private string _CareDate;
		
		private string _NextCareDate;
		
		private int _IdStaff;
		
		private int _IdCarePerson;
		
		private System.Nullable<int> _IdAssistance;
		
		private int _IdObjectCare;
		
		private bool _IsDone;
		
		private bool _IsPaid;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _Discount;
		
		private System.Nullable<int> _Payment;
		
		private System.Nullable<int> _Balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDiffNoChanging(System.Nullable<int> value);
    partial void OnDiffNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnCareDateChanging(string value);
    partial void OnCareDateChanged();
    partial void OnNextCareDateChanging(string value);
    partial void OnNextCareDateChanged();
    partial void OnIdStaffChanging(int value);
    partial void OnIdStaffChanged();
    partial void OnIdCarePersonChanging(int value);
    partial void OnIdCarePersonChanged();
    partial void OnIdAssistanceChanging(System.Nullable<int> value);
    partial void OnIdAssistanceChanged();
    partial void OnIdObjectCareChanging(int value);
    partial void OnIdObjectCareChanged();
    partial void OnIsDoneChanging(bool value);
    partial void OnIsDoneChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnDiscountChanging(System.Nullable<int> value);
    partial void OnDiscountChanged();
    partial void OnPaymentChanging(System.Nullable<int> value);
    partial void OnPaymentChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    #endregion
		
		public ObjectCareDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="Int")]
		public System.Nullable<int> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareDate", DbType="NVarChar(50)")]
		public string CareDate
		{
			get
			{
				return this._CareDate;
			}
			set
			{
				if ((this._CareDate != value))
				{
					this.OnCareDateChanging(value);
					this.SendPropertyChanging();
					this._CareDate = value;
					this.SendPropertyChanged("CareDate");
					this.OnCareDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextCareDate", DbType="NVarChar(50)")]
		public string NextCareDate
		{
			get
			{
				return this._NextCareDate;
			}
			set
			{
				if ((this._NextCareDate != value))
				{
					this.OnNextCareDateChanging(value);
					this.SendPropertyChanging();
					this._NextCareDate = value;
					this.SendPropertyChanged("NextCareDate");
					this.OnNextCareDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="Int NOT NULL")]
		public int IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCarePerson", DbType="Int NOT NULL")]
		public int IdCarePerson
		{
			get
			{
				return this._IdCarePerson;
			}
			set
			{
				if ((this._IdCarePerson != value))
				{
					this.OnIdCarePersonChanging(value);
					this.SendPropertyChanging();
					this._IdCarePerson = value;
					this.SendPropertyChanged("IdCarePerson");
					this.OnIdCarePersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAssistance", DbType="Int")]
		public System.Nullable<int> IdAssistance
		{
			get
			{
				return this._IdAssistance;
			}
			set
			{
				if ((this._IdAssistance != value))
				{
					this.OnIdAssistanceChanging(value);
					this.SendPropertyChanging();
					this._IdAssistance = value;
					this.SendPropertyChanged("IdAssistance");
					this.OnIdAssistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjectCare", DbType="Int NOT NULL")]
		public int IdObjectCare
		{
			get
			{
				return this._IdObjectCare;
			}
			set
			{
				if ((this._IdObjectCare != value))
				{
					this.OnIdObjectCareChanging(value);
					this.SendPropertyChanging();
					this._IdObjectCare = value;
					this.SendPropertyChanged("IdObjectCare");
					this.OnIdObjectCareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit NOT NULL")]
		public bool IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int")]
		public System.Nullable<int> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Int")]
		public System.Nullable<int> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectCare")]
	public partial class ObjectCare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private System.Nullable<int> _DiffNo;
		
		private string _Name;
		
		private string _Note;
		
		private string _CreatedDate;
		
		private int _IdStaff;
		
		private int _IdCustomer;
		
		private bool _IsDone;
		
		private System.Nullable<long> _IdBrance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDiffNoChanging(System.Nullable<int> value);
    partial void OnDiffNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnIdStaffChanging(int value);
    partial void OnIdStaffChanged();
    partial void OnIdCustomerChanging(int value);
    partial void OnIdCustomerChanged();
    partial void OnIsDoneChanging(bool value);
    partial void OnIsDoneChanged();
    partial void OnIdBranceChanging(System.Nullable<long> value);
    partial void OnIdBranceChanged();
    #endregion
		
		public ObjectCare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="Int")]
		public System.Nullable<int> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="Int NOT NULL")]
		public int IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="Int NOT NULL")]
		public int IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this.OnIdCustomerChanging(value);
					this.SendPropertyChanging();
					this._IdCustomer = value;
					this.SendPropertyChanged("IdCustomer");
					this.OnIdCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit NOT NULL")]
		public bool IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBrance", DbType="BigInt")]
		public System.Nullable<long> IdBrance
		{
			get
			{
				return this._IdBrance;
			}
			set
			{
				if ((this._IdBrance != value))
				{
					this.OnIdBranceChanging(value);
					this.SendPropertyChanging();
					this._IdBrance = value;
					this.SendPropertyChanged("IdBrance");
					this.OnIdBranceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductColorView")]
	public partial class ProductColorView
	{
		
		private long _Id;
		
		private string _Name;
		
		public ProductColorView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(55)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductKindView")]
	public partial class ProductKindView
	{
		
		private int _Id;
		
		private string _Name;
		
		public ProductKindView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(55)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSizeView")]
	public partial class ProductSizeView
	{
		
		private long _Id;
		
		private string _Lenth;
		
		public ProductSizeView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lenth", DbType="NVarChar(103)")]
		public string Lenth
		{
			get
			{
				return this._Lenth;
			}
			set
			{
				if ((this._Lenth != value))
				{
					this._Lenth = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSize")]
	public partial class ProductSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Lenth;
		
		private string _Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLenthChanging(string value);
    partial void OnLenthChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public ProductSize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lenth", DbType="NVarChar(50)")]
		public string Lenth
		{
			get
			{
				return this._Lenth;
			}
			set
			{
				if ((this._Lenth != value))
				{
					this.OnLenthChanging(value);
					this.SendPropertyChanging();
					this._Lenth = value;
					this.SendPropertyChanged("Lenth");
					this.OnLenthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacture")]
	public partial class Manufacture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _Address;
		
		private string _Country;
		
		private string _Email;
		
		private string _Phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Manufacture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(2)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManufactureView")]
	public partial class ManufactureView
	{
		
		private int _Id;
		
		private string _Name;
		
		public ManufactureView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(55)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryStorage")]
	public partial class InventoryStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public InventoryStorage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private System.Nullable<long> _DiffNo;
		
		private string _CodeEx;
		
		private System.Data.Linq.Binary _Barcode;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private System.Nullable<long> _PriceIn;
		
		private System.Nullable<long> _IdInvoice;
		
		private System.Nullable<int> _IdInventoryStorage;
		
		private System.Nullable<bool> _IsOutput;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDiffNoChanging(System.Nullable<long> value);
    partial void OnDiffNoChanged();
    partial void OnCodeExChanging(string value);
    partial void OnCodeExChanged();
    partial void OnBarcodeChanging(System.Data.Linq.Binary value);
    partial void OnBarcodeChanged();
    partial void OnCreatedDateChanging(System.Nullable<long> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedDateExChanging(string value);
    partial void OnCreatedDateExChanged();
    partial void OnPriceInChanging(System.Nullable<long> value);
    partial void OnPriceInChanged();
    partial void OnIdInvoiceChanging(System.Nullable<long> value);
    partial void OnIdInvoiceChanged();
    partial void OnIdInventoryStorageChanging(System.Nullable<int> value);
    partial void OnIdInventoryStorageChanged();
    partial void OnIsOutputChanging(System.Nullable<bool> value);
    partial void OnIsOutputChanged();
    #endregion
		
		public Inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(250)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="BigInt")]
		public System.Nullable<long> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(250)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this.OnCodeExChanging(value);
					this.SendPropertyChanging();
					this._CodeEx = value;
					this.SendPropertyChanged("CodeEx");
					this.OnCodeExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Binary(1024)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(250)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this.OnCreatedDateExChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateEx = value;
					this.SendPropertyChanged("CreatedDateEx");
					this.OnCreatedDateExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="BigInt")]
		public System.Nullable<long> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this.OnPriceInChanging(value);
					this.SendPropertyChanging();
					this._PriceIn = value;
					this.SendPropertyChanged("PriceIn");
					this.OnPriceInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInvoice", DbType="BigInt")]
		public System.Nullable<long> IdInvoice
		{
			get
			{
				return this._IdInvoice;
			}
			set
			{
				if ((this._IdInvoice != value))
				{
					this.OnIdInvoiceChanging(value);
					this.SendPropertyChanging();
					this._IdInvoice = value;
					this.SendPropertyChanged("IdInvoice");
					this.OnIdInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInventoryStorage", DbType="Int")]
		public System.Nullable<int> IdInventoryStorage
		{
			get
			{
				return this._IdInventoryStorage;
			}
			set
			{
				if ((this._IdInventoryStorage != value))
				{
					this.OnIdInventoryStorageChanging(value);
					this.SendPropertyChanging();
					this._IdInventoryStorage = value;
					this.SendPropertyChanged("IdInventoryStorage");
					this.OnIdInventoryStorageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutput", DbType="Bit")]
		public System.Nullable<bool> IsOutput
		{
			get
			{
				return this._IsOutput;
			}
			set
			{
				if ((this._IsOutput != value))
				{
					this.OnIsOutputChanging(value);
					this.SendPropertyChanging();
					this._IsOutput = value;
					this.SendPropertyChanged("IsOutput");
					this.OnIsOutputChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<decimal> _PriceIn;
		
		private System.Nullable<decimal> _PriceOut;
		
		private int _IdUnit;
		
		private System.Nullable<int> _IdProductColor;
		
		private System.Nullable<int> _IdProductKind;
		
		private int _IdGroup;
		
		private int _IdManufacture;
		
		private string _InventoryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceInChanging(System.Nullable<decimal> value);
    partial void OnPriceInChanged();
    partial void OnPriceOutChanging(System.Nullable<decimal> value);
    partial void OnPriceOutChanged();
    partial void OnIdUnitChanging(int value);
    partial void OnIdUnitChanged();
    partial void OnIdProductColorChanging(System.Nullable<int> value);
    partial void OnIdProductColorChanged();
    partial void OnIdProductKindChanging(System.Nullable<int> value);
    partial void OnIdProductKindChanged();
    partial void OnIdGroupChanging(int value);
    partial void OnIdGroupChanged();
    partial void OnIdManufactureChanging(int value);
    partial void OnIdManufactureChanged();
    partial void OnInventoryTypeChanging(string value);
    partial void OnInventoryTypeChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="Money")]
		public System.Nullable<decimal> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this.OnPriceInChanging(value);
					this.SendPropertyChanging();
					this._PriceIn = value;
					this.SendPropertyChanged("PriceIn");
					this.OnPriceInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this.OnPriceOutChanging(value);
					this.SendPropertyChanging();
					this._PriceOut = value;
					this.SendPropertyChanged("PriceOut");
					this.OnPriceOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUnit", DbType="Int NOT NULL")]
		public int IdUnit
		{
			get
			{
				return this._IdUnit;
			}
			set
			{
				if ((this._IdUnit != value))
				{
					this.OnIdUnitChanging(value);
					this.SendPropertyChanging();
					this._IdUnit = value;
					this.SendPropertyChanged("IdUnit");
					this.OnIdUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductColor", DbType="Int")]
		public System.Nullable<int> IdProductColor
		{
			get
			{
				return this._IdProductColor;
			}
			set
			{
				if ((this._IdProductColor != value))
				{
					this.OnIdProductColorChanging(value);
					this.SendPropertyChanging();
					this._IdProductColor = value;
					this.SendPropertyChanged("IdProductColor");
					this.OnIdProductColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductKind", DbType="Int")]
		public System.Nullable<int> IdProductKind
		{
			get
			{
				return this._IdProductKind;
			}
			set
			{
				if ((this._IdProductKind != value))
				{
					this.OnIdProductKindChanging(value);
					this.SendPropertyChanging();
					this._IdProductKind = value;
					this.SendPropertyChanged("IdProductKind");
					this.OnIdProductKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGroup", DbType="Int NOT NULL")]
		public int IdGroup
		{
			get
			{
				return this._IdGroup;
			}
			set
			{
				if ((this._IdGroup != value))
				{
					this.OnIdGroupChanging(value);
					this.SendPropertyChanging();
					this._IdGroup = value;
					this.SendPropertyChanged("IdGroup");
					this.OnIdGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdManufacture", DbType="Int NOT NULL")]
		public int IdManufacture
		{
			get
			{
				return this._IdManufacture;
			}
			set
			{
				if ((this._IdManufacture != value))
				{
					this.OnIdManufactureChanging(value);
					this.SendPropertyChanging();
					this._IdManufacture = value;
					this.SendPropertyChanged("IdManufacture");
					this.OnIdManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NVarChar(50)")]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					this.OnInventoryTypeChanging(value);
					this.SendPropertyChanging();
					this._InventoryType = value;
					this.SendPropertyChanged("InventoryType");
					this.OnInventoryTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductView")]
	public partial class ProductView
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<decimal> _PriceIn;
		
		private System.Nullable<decimal> _PriceOut;
		
		private string _UnitName;
		
		private string _GroupName;
		
		private string _ManufactureName;
		
		private System.Nullable<int> _IdProductKind;
		
		private string _ProductKindName;
		
		private string _ProductColorName;
		
		public ProductView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="Money")]
		public System.Nullable<decimal> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this._PriceIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this._PriceOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureName", DbType="NVarChar(50)")]
		public string ManufactureName
		{
			get
			{
				return this._ManufactureName;
			}
			set
			{
				if ((this._ManufactureName != value))
				{
					this._ManufactureName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductKind", DbType="Int")]
		public System.Nullable<int> IdProductKind
		{
			get
			{
				return this._IdProductKind;
			}
			set
			{
				if ((this._IdProductKind != value))
				{
					this._IdProductKind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductKindName", DbType="NVarChar(50)")]
		public string ProductKindName
		{
			get
			{
				return this._ProductKindName;
			}
			set
			{
				if ((this._ProductKindName != value))
				{
					this._ProductKindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductColorName", DbType="NVarChar(50)")]
		public string ProductColorName
		{
			get
			{
				return this._ProductColorName;
			}
			set
			{
				if ((this._ProductColorName != value))
				{
					this._ProductColorName = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryInputItem")]
	public partial class InventoryInputItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private System.Nullable<long> _DiffNo;
		
		private string _CodeEx;
		
		private System.Data.Linq.Binary _Barcode;
		
		private System.Nullable<long> _PriceIn;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<long> _IdProductPurchase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDiffNoChanging(System.Nullable<long> value);
    partial void OnDiffNoChanged();
    partial void OnCodeExChanging(string value);
    partial void OnCodeExChanged();
    partial void OnBarcodeChanging(System.Data.Linq.Binary value);
    partial void OnBarcodeChanged();
    partial void OnPriceInChanging(System.Nullable<long> value);
    partial void OnPriceInChanged();
    partial void OnQuantityChanging(System.Nullable<float> value);
    partial void OnQuantityChanged();
    partial void OnIdProductPurchaseChanging(System.Nullable<long> value);
    partial void OnIdProductPurchaseChanged();
    #endregion
		
		public InventoryInputItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="BigInt")]
		public System.Nullable<long> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(50)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this.OnCodeExChanging(value);
					this.SendPropertyChanging();
					this._CodeEx = value;
					this.SendPropertyChanged("CodeEx");
					this.OnCodeExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="BigInt")]
		public System.Nullable<long> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this.OnPriceInChanging(value);
					this.SendPropertyChanging();
					this._PriceIn = value;
					this.SendPropertyChanged("PriceIn");
					this.OnPriceInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductPurchase", DbType="BigInt")]
		public System.Nullable<long> IdProductPurchase
		{
			get
			{
				return this._IdProductPurchase;
			}
			set
			{
				if ((this._IdProductPurchase != value))
				{
					this.OnIdProductPurchaseChanging(value);
					this.SendPropertyChanging();
					this._IdProductPurchase = value;
					this.SendPropertyChanged("IdProductPurchase");
					this.OnIdProductPurchaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductPurchaseItem")]
	public partial class ProductPurchaseItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _IdProduct;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<float> _Amount;
		
		private System.Nullable<long> _IdProductPurchase;
		
		private System.Nullable<long> _IdInventory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnIdProductChanging(System.Nullable<long> value);
    partial void OnIdProductChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(System.Nullable<float> value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(System.Nullable<float> value);
    partial void OnAmountChanged();
    partial void OnIdProductPurchaseChanging(System.Nullable<long> value);
    partial void OnIdProductPurchaseChanged();
    partial void OnIdInventoryChanging(System.Nullable<long> value);
    partial void OnIdInventoryChanged();
    #endregion
		
		public ProductPurchaseItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="BigInt")]
		public System.Nullable<long> IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real")]
		public System.Nullable<float> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductPurchase", DbType="BigInt")]
		public System.Nullable<long> IdProductPurchase
		{
			get
			{
				return this._IdProductPurchase;
			}
			set
			{
				if ((this._IdProductPurchase != value))
				{
					this.OnIdProductPurchaseChanging(value);
					this.SendPropertyChanging();
					this._IdProductPurchase = value;
					this.SendPropertyChanged("IdProductPurchase");
					this.OnIdProductPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInventory", DbType="BigInt")]
		public System.Nullable<long> IdInventory
		{
			get
			{
				return this._IdInventory;
			}
			set
			{
				if ((this._IdInventory != value))
				{
					this.OnIdInventoryChanging(value);
					this.SendPropertyChanging();
					this._IdInventory = value;
					this.SendPropertyChanged("IdInventory");
					this.OnIdInventoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductColor")]
	public partial class ProductColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public ProductColor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(3)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceSaleItemView")]
	public partial class ServiceSaleItemView
	{
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _IdObjectCareDetail;
		
		private int _IdService;
		
		public ServiceSaleItemView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjectCareDetail", DbType="Int")]
		public System.Nullable<int> IdObjectCareDetail
		{
			get
			{
				return this._IdObjectCareDetail;
			}
			set
			{
				if ((this._IdObjectCareDetail != value))
				{
					this._IdObjectCareDetail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdService", DbType="Int NOT NULL")]
		public int IdService
		{
			get
			{
				return this._IdService;
			}
			set
			{
				if ((this._IdService != value))
				{
					this._IdService = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSale")]
	public partial class ProductSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _InvoiceNo;
		
		private System.Nullable<int> _DiffNo;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private System.Nullable<long> _InvoiceDate;
		
		private string _InvoiceDateEx;
		
		private System.Nullable<long> _IdStaff;
		
		private System.Nullable<long> _IdStaffSale;
		
		private System.Nullable<long> _IdCustomer;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _Tax;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _Payment;
		
		private System.Nullable<bool> _IsDone;
		
		private System.Nullable<long> _IdBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnDiffNoChanging(System.Nullable<int> value);
    partial void OnDiffNoChanged();
    partial void OnCreatedDateChanging(System.Nullable<long> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedDateExChanging(string value);
    partial void OnCreatedDateExChanged();
    partial void OnInvoiceDateChanging(System.Nullable<long> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceDateExChanging(string value);
    partial void OnInvoiceDateExChanged();
    partial void OnIdStaffChanging(System.Nullable<long> value);
    partial void OnIdStaffChanged();
    partial void OnIdStaffSaleChanging(System.Nullable<long> value);
    partial void OnIdStaffSaleChanged();
    partial void OnIdCustomerChanging(System.Nullable<long> value);
    partial void OnIdCustomerChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnTaxChanging(System.Nullable<int> value);
    partial void OnTaxChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnPaymentChanging(System.Nullable<decimal> value);
    partial void OnPaymentChanged();
    partial void OnIsDoneChanging(System.Nullable<bool> value);
    partial void OnIsDoneChanged();
    partial void OnIdBranchChanging(System.Nullable<long> value);
    partial void OnIdBranchChanged();
    #endregion
		
		public ProductSale()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="Int")]
		public System.Nullable<int> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(50)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this.OnCreatedDateExChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateEx = value;
					this.SendPropertyChanged("CreatedDateEx");
					this.OnCreatedDateExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="BigInt")]
		public System.Nullable<long> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateEx", DbType="NVarChar(50)")]
		public string InvoiceDateEx
		{
			get
			{
				return this._InvoiceDateEx;
			}
			set
			{
				if ((this._InvoiceDateEx != value))
				{
					this.OnInvoiceDateExChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDateEx = value;
					this.SendPropertyChanged("InvoiceDateEx");
					this.OnInvoiceDateExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="BigInt")]
		public System.Nullable<long> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaffSale", DbType="BigInt")]
		public System.Nullable<long> IdStaffSale
		{
			get
			{
				return this._IdStaffSale;
			}
			set
			{
				if ((this._IdStaffSale != value))
				{
					this.OnIdStaffSaleChanging(value);
					this.SendPropertyChanging();
					this._IdStaffSale = value;
					this.SendPropertyChanged("IdStaffSale");
					this.OnIdStaffSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="BigInt")]
		public System.Nullable<long> IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this.OnIdCustomerChanging(value);
					this.SendPropertyChanging();
					this._IdCustomer = value;
					this.SendPropertyChanged("IdCustomer");
					this.OnIdCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int")]
		public System.Nullable<int> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Money")]
		public System.Nullable<decimal> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBranch", DbType="BigInt")]
		public System.Nullable<long> IdBranch
		{
			get
			{
				return this._IdBranch;
			}
			set
			{
				if ((this._IdBranch != value))
				{
					this.OnIdBranchChanging(value);
					this.SendPropertyChanging();
					this._IdBranch = value;
					this.SendPropertyChanged("IdBranch");
					this.OnIdBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductPurchaseItemView")]
	public partial class ProductPurchaseItemView
	{
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<float> _Amount;
		
		private System.Nullable<long> _IdProductPurchase;
		
		private System.Nullable<long> _IdInventory;
		
		private string _UnitName;
		
		private System.Nullable<long> _IdProduct;
		
		private string _InvoiceNo;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private System.Nullable<long> _InvoiceDate;
		
		private string _InvoiceDateEx;
		
		private System.Nullable<long> _IdStaff;
		
		private System.Nullable<long> _IdVendor;
		
		private System.Nullable<long> _Expr1;
		
		private System.Nullable<long> _Discount;
		
		private System.Nullable<long> _Payment;
		
		private System.Nullable<bool> _IsDone;
		
		private System.Nullable<long> _IdBranch;
		
		public ProductPurchaseItemView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real")]
		public System.Nullable<float> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductPurchase", DbType="BigInt")]
		public System.Nullable<long> IdProductPurchase
		{
			get
			{
				return this._IdProductPurchase;
			}
			set
			{
				if ((this._IdProductPurchase != value))
				{
					this._IdProductPurchase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInventory", DbType="BigInt")]
		public System.Nullable<long> IdInventory
		{
			get
			{
				return this._IdInventory;
			}
			set
			{
				if ((this._IdInventory != value))
				{
					this._IdInventory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="BigInt")]
		public System.Nullable<long> IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this._IdProduct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(50)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this._CreatedDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="BigInt")]
		public System.Nullable<long> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateEx", DbType="NVarChar(50)")]
		public string InvoiceDateEx
		{
			get
			{
				return this._InvoiceDateEx;
			}
			set
			{
				if ((this._InvoiceDateEx != value))
				{
					this._InvoiceDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="BigInt")]
		public System.Nullable<long> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this._IdStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVendor", DbType="BigInt")]
		public System.Nullable<long> IdVendor
		{
			get
			{
				return this._IdVendor;
			}
			set
			{
				if ((this._IdVendor != value))
				{
					this._IdVendor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="BigInt")]
		public System.Nullable<long> Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="BigInt")]
		public System.Nullable<long> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="BigInt")]
		public System.Nullable<long> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this._Payment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this._IsDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBranch", DbType="BigInt")]
		public System.Nullable<long> IdBranch
		{
			get
			{
				return this._IdBranch;
			}
			set
			{
				if ((this._IdBranch != value))
				{
					this._IdBranch = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductKindColorView")]
	public partial class ProductKindColorView
	{
		
		private int _Id;
		
		private System.Nullable<int> _IdProductKind;
		
		private System.Nullable<int> _IdProductColor;
		
		private string _ProductKindName;
		
		private string _ProductKindCode;
		
		private string _ProductColorName;
		
		private string _ProductColorCode;
		
		public ProductKindColorView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductKind", DbType="Int")]
		public System.Nullable<int> IdProductKind
		{
			get
			{
				return this._IdProductKind;
			}
			set
			{
				if ((this._IdProductKind != value))
				{
					this._IdProductKind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductColor", DbType="Int")]
		public System.Nullable<int> IdProductColor
		{
			get
			{
				return this._IdProductColor;
			}
			set
			{
				if ((this._IdProductColor != value))
				{
					this._IdProductColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductKindName", DbType="NVarChar(50)")]
		public string ProductKindName
		{
			get
			{
				return this._ProductKindName;
			}
			set
			{
				if ((this._ProductKindName != value))
				{
					this._ProductKindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductKindCode", DbType="NVarChar(2)")]
		public string ProductKindCode
		{
			get
			{
				return this._ProductKindCode;
			}
			set
			{
				if ((this._ProductKindCode != value))
				{
					this._ProductKindCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductColorName", DbType="NVarChar(50)")]
		public string ProductColorName
		{
			get
			{
				return this._ProductColorName;
			}
			set
			{
				if ((this._ProductColorName != value))
				{
					this._ProductColorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductColorCode", DbType="NVarChar(3)")]
		public string ProductColorCode
		{
			get
			{
				return this._ProductColorCode;
			}
			set
			{
				if ((this._ProductColorCode != value))
				{
					this._ProductColorCode = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryView")]
	public partial class InventoryView
	{
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _UnitName;
		
		private System.Nullable<long> _DiffNo;
		
		private string _CodeEx;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private string _InvoiceNo;
		
		private System.Nullable<long> _PriceIn;
		
		private string _StorageName;
		
		private System.Nullable<decimal> _PriceOut;
		
		private string _ProductKindName;
		
		private string _ProductColorName;
		
		public InventoryView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(250)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="BigInt")]
		public System.Nullable<long> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this._DiffNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(250)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this._CodeEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(250)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this._CreatedDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="BigInt")]
		public System.Nullable<long> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this._PriceIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageName", DbType="NVarChar(50)")]
		public string StorageName
		{
			get
			{
				return this._StorageName;
			}
			set
			{
				if ((this._StorageName != value))
				{
					this._StorageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this._PriceOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductKindName", DbType="NVarChar(50)")]
		public string ProductKindName
		{
			get
			{
				return this._ProductKindName;
			}
			set
			{
				if ((this._ProductKindName != value))
				{
					this._ProductKindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductColorName", DbType="NVarChar(50)")]
		public string ProductColorName
		{
			get
			{
				return this._ProductColorName;
			}
			set
			{
				if ((this._ProductColorName != value))
				{
					this._ProductColorName = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductPurchase")]
	public partial class ProductPurchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _InvoiceNo;
		
		private System.Nullable<int> _DiffNo;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private System.Nullable<long> _InvoiceDate;
		
		private string _InvoiceDateEx;
		
		private System.Nullable<long> _IdStaff;
		
		private System.Nullable<long> _IdVendor;
		
		private System.Nullable<long> _Amount;
		
		private System.Nullable<long> _Discount;
		
		private System.Nullable<long> _Payment;
		
		private System.Nullable<bool> _IsDone;
		
		private System.Nullable<long> _IdBranch;
		
		private string _Kind;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnDiffNoChanging(System.Nullable<int> value);
    partial void OnDiffNoChanged();
    partial void OnCreatedDateChanging(System.Nullable<long> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedDateExChanging(string value);
    partial void OnCreatedDateExChanged();
    partial void OnInvoiceDateChanging(System.Nullable<long> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceDateExChanging(string value);
    partial void OnInvoiceDateExChanged();
    partial void OnIdStaffChanging(System.Nullable<long> value);
    partial void OnIdStaffChanged();
    partial void OnIdVendorChanging(System.Nullable<long> value);
    partial void OnIdVendorChanged();
    partial void OnAmountChanging(System.Nullable<long> value);
    partial void OnAmountChanged();
    partial void OnDiscountChanging(System.Nullable<long> value);
    partial void OnDiscountChanged();
    partial void OnPaymentChanging(System.Nullable<long> value);
    partial void OnPaymentChanged();
    partial void OnIsDoneChanging(System.Nullable<bool> value);
    partial void OnIsDoneChanged();
    partial void OnIdBranchChanging(System.Nullable<long> value);
    partial void OnIdBranchChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    #endregion
		
		public ProductPurchase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="Int")]
		public System.Nullable<int> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(50)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this.OnCreatedDateExChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateEx = value;
					this.SendPropertyChanged("CreatedDateEx");
					this.OnCreatedDateExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="BigInt")]
		public System.Nullable<long> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateEx", DbType="NVarChar(50)")]
		public string InvoiceDateEx
		{
			get
			{
				return this._InvoiceDateEx;
			}
			set
			{
				if ((this._InvoiceDateEx != value))
				{
					this.OnInvoiceDateExChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDateEx = value;
					this.SendPropertyChanged("InvoiceDateEx");
					this.OnInvoiceDateExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="BigInt")]
		public System.Nullable<long> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVendor", DbType="BigInt")]
		public System.Nullable<long> IdVendor
		{
			get
			{
				return this._IdVendor;
			}
			set
			{
				if ((this._IdVendor != value))
				{
					this.OnIdVendorChanging(value);
					this.SendPropertyChanging();
					this._IdVendor = value;
					this.SendPropertyChanged("IdVendor");
					this.OnIdVendorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="BigInt")]
		public System.Nullable<long> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="BigInt")]
		public System.Nullable<long> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="BigInt")]
		public System.Nullable<long> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBranch", DbType="BigInt")]
		public System.Nullable<long> IdBranch
		{
			get
			{
				return this._IdBranch;
			}
			set
			{
				if ((this._IdBranch != value))
				{
					this.OnIdBranchChanging(value);
					this.SendPropertyChanging();
					this._IdBranch = value;
					this.SendPropertyChanged("IdBranch");
					this.OnIdBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="NVarChar(50)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductPurchaseView")]
	public partial class ProductPurchaseView
	{
		
		private long _Id;
		
		private string _InvoiceNo;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _CreatedDateEx;
		
		private System.Nullable<long> _InvoiceDate;
		
		private string _InvoiceDateEx;
		
		private string _VendorName;
		
		private System.Nullable<long> _Amount;
		
		private System.Nullable<long> _Discount;
		
		private System.Nullable<long> _Payment;
		
		private System.Nullable<bool> _IsDone;
		
		private string _Kind;
		
		public ProductPurchaseView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(50)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this._CreatedDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="BigInt")]
		public System.Nullable<long> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateEx", DbType="NVarChar(50)")]
		public string InvoiceDateEx
		{
			get
			{
				return this._InvoiceDateEx;
			}
			set
			{
				if ((this._InvoiceDateEx != value))
				{
					this._InvoiceDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="BigInt")]
		public System.Nullable<long> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="BigInt")]
		public System.Nullable<long> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="BigInt")]
		public System.Nullable<long> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this._Payment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this._IsDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="NVarChar(50)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this._Kind = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryOutputItem")]
	public partial class InventoryOutputItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<long> _DiffNo;
		
		private string _CodeEx;
		
		private System.Data.Linq.Binary _Barcode;
		
		private System.Data.Linq.Binary _QR;
		
		private System.Nullable<decimal> _PriceOut;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<long> _IdProductSale;
		
		private System.Nullable<bool> _IsDone;
		
		private System.Nullable<int> _ReportColunm;
		
		private System.Nullable<float> _QuantityDiscount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDiffNoChanging(System.Nullable<long> value);
    partial void OnDiffNoChanged();
    partial void OnCodeExChanging(string value);
    partial void OnCodeExChanged();
    partial void OnBarcodeChanging(System.Data.Linq.Binary value);
    partial void OnBarcodeChanged();
    partial void OnQRChanging(System.Data.Linq.Binary value);
    partial void OnQRChanged();
    partial void OnPriceOutChanging(System.Nullable<decimal> value);
    partial void OnPriceOutChanged();
    partial void OnQuantityChanging(System.Nullable<float> value);
    partial void OnQuantityChanged();
    partial void OnIdProductSaleChanging(System.Nullable<long> value);
    partial void OnIdProductSaleChanged();
    partial void OnIsDoneChanging(System.Nullable<bool> value);
    partial void OnIsDoneChanged();
    partial void OnReportColunmChanging(System.Nullable<int> value);
    partial void OnReportColunmChanged();
    partial void OnQuantityDiscountChanging(System.Nullable<float> value);
    partial void OnQuantityDiscountChanged();
    #endregion
		
		public InventoryOutputItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="BigInt")]
		public System.Nullable<long> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this.OnDiffNoChanging(value);
					this.SendPropertyChanging();
					this._DiffNo = value;
					this.SendPropertyChanged("DiffNo");
					this.OnDiffNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(50)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this.OnCodeExChanging(value);
					this.SendPropertyChanging();
					this._CodeEx = value;
					this.SendPropertyChanged("CodeEx");
					this.OnCodeExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Binary(250)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QR", DbType="Binary(250)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary QR
		{
			get
			{
				return this._QR;
			}
			set
			{
				if ((this._QR != value))
				{
					this.OnQRChanging(value);
					this.SendPropertyChanging();
					this._QR = value;
					this.SendPropertyChanged("QR");
					this.OnQRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this.OnPriceOutChanging(value);
					this.SendPropertyChanging();
					this._PriceOut = value;
					this.SendPropertyChanged("PriceOut");
					this.OnPriceOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductSale", DbType="BigInt")]
		public System.Nullable<long> IdProductSale
		{
			get
			{
				return this._IdProductSale;
			}
			set
			{
				if ((this._IdProductSale != value))
				{
					this.OnIdProductSaleChanging(value);
					this.SendPropertyChanging();
					this._IdProductSale = value;
					this.SendPropertyChanged("IdProductSale");
					this.OnIdProductSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportColunm", DbType="Int")]
		public System.Nullable<int> ReportColunm
		{
			get
			{
				return this._ReportColunm;
			}
			set
			{
				if ((this._ReportColunm != value))
				{
					this.OnReportColunmChanging(value);
					this.SendPropertyChanging();
					this._ReportColunm = value;
					this.SendPropertyChanged("ReportColunm");
					this.OnReportColunmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityDiscount", DbType="Real")]
		public System.Nullable<float> QuantityDiscount
		{
			get
			{
				return this._QuantityDiscount;
			}
			set
			{
				if ((this._QuantityDiscount != value))
				{
					this.OnQuantityDiscountChanging(value);
					this.SendPropertyChanging();
					this._QuantityDiscount = value;
					this.SendPropertyChanged("QuantityDiscount");
					this.OnQuantityDiscountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSaleItem")]
	public partial class ProductSaleItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _IdProduct;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _IdProductSale;
		
		private System.Nullable<int> _IdObjectCareDetail;
		
		private System.Nullable<float> _QuantityDiscount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(System.Nullable<float> value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnIdProductSaleChanging(System.Nullable<int> value);
    partial void OnIdProductSaleChanged();
    partial void OnIdObjectCareDetailChanging(System.Nullable<int> value);
    partial void OnIdObjectCareDetailChanged();
    partial void OnQuantityDiscountChanging(System.Nullable<float> value);
    partial void OnQuantityDiscountChanged();
    #endregion
		
		public ProductSaleItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL")]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductSale", DbType="Int")]
		public System.Nullable<int> IdProductSale
		{
			get
			{
				return this._IdProductSale;
			}
			set
			{
				if ((this._IdProductSale != value))
				{
					this.OnIdProductSaleChanging(value);
					this.SendPropertyChanging();
					this._IdProductSale = value;
					this.SendPropertyChanged("IdProductSale");
					this.OnIdProductSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjectCareDetail", DbType="Int")]
		public System.Nullable<int> IdObjectCareDetail
		{
			get
			{
				return this._IdObjectCareDetail;
			}
			set
			{
				if ((this._IdObjectCareDetail != value))
				{
					this.OnIdObjectCareDetailChanging(value);
					this.SendPropertyChanging();
					this._IdObjectCareDetail = value;
					this.SendPropertyChanged("IdObjectCareDetail");
					this.OnIdObjectCareDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityDiscount", DbType="Real")]
		public System.Nullable<float> QuantityDiscount
		{
			get
			{
				return this._QuantityDiscount;
			}
			set
			{
				if ((this._QuantityDiscount != value))
				{
					this.OnQuantityDiscountChanging(value);
					this.SendPropertyChanging();
					this._QuantityDiscount = value;
					this.SendPropertyChanged("QuantityDiscount");
					this.OnQuantityDiscountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryOutputItemGroupView")]
	public partial class InventoryOutputItemGroupView
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<decimal> _PriceOut;
		
		private System.Nullable<double> _Quantity;
		
		private string _UnitName;
		
		private System.Nullable<double> _QuantityDiscount;
		
		private System.Nullable<long> _IdProductSale;
		
		public InventoryOutputItemGroupView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this._PriceOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityDiscount", DbType="Float")]
		public System.Nullable<double> QuantityDiscount
		{
			get
			{
				return this._QuantityDiscount;
			}
			set
			{
				if ((this._QuantityDiscount != value))
				{
					this._QuantityDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductSale", DbType="BigInt")]
		public System.Nullable<long> IdProductSale
		{
			get
			{
				return this._IdProductSale;
			}
			set
			{
				if ((this._IdProductSale != value))
				{
					this._IdProductSale = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryOutputItemView")]
	public partial class InventoryOutputItemView
	{
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<long> _DiffNo;
		
		private string _CodeEx;
		
		private System.Nullable<float> _Quantity;
		
		private string _UnitName;
		
		private System.Nullable<long> _IdProductSale;
		
		private System.Nullable<decimal> _PriceOut;
		
		private System.Nullable<float> _Amount;
		
		private System.Nullable<int> _ReportColunm;
		
		private string _KindName;
		
		private string _InvoiceNo;
		
		private string _CustomerName;
		
		private string _StaffName;
		
		private System.Data.Linq.Binary _Barcode;
		
		private System.Data.Linq.Binary _QR;
		
		private System.Nullable<float> _QuantityDiscount;
		
		public InventoryOutputItemView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiffNo", DbType="BigInt")]
		public System.Nullable<long> DiffNo
		{
			get
			{
				return this._DiffNo;
			}
			set
			{
				if ((this._DiffNo != value))
				{
					this._DiffNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(50)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this._CodeEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductSale", DbType="BigInt")]
		public System.Nullable<long> IdProductSale
		{
			get
			{
				return this._IdProductSale;
			}
			set
			{
				if ((this._IdProductSale != value))
				{
					this._IdProductSale = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this._PriceOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real")]
		public System.Nullable<float> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportColunm", DbType="Int")]
		public System.Nullable<int> ReportColunm
		{
			get
			{
				return this._ReportColunm;
			}
			set
			{
				if ((this._ReportColunm != value))
				{
					this._ReportColunm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KindName
		{
			get
			{
				return this._KindName;
			}
			set
			{
				if ((this._KindName != value))
				{
					this._KindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this._StaffName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Binary(250)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QR", DbType="Binary(250)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary QR
		{
			get
			{
				return this._QR;
			}
			set
			{
				if ((this._QR != value))
				{
					this._QR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityDiscount", DbType="Real")]
		public System.Nullable<float> QuantityDiscount
		{
			get
			{
				return this._QuantityDiscount;
			}
			set
			{
				if ((this._QuantityDiscount != value))
				{
					this._QuantityDiscount = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSaleItemView")]
	public partial class ProductSaleItemView
	{
		
		private long _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<float> _QuantityDiscount;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _IdProductSale;
		
		private System.Nullable<int> _IdObjectCareDetail;
		
		private int _IdUnit;
		
		private string _UnitName;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _InvoiceNo;
		
		private System.Nullable<long> _IdStaff;
		
		private System.Nullable<long> _IdCustomer;
		
		private System.Nullable<long> _InvoiceDate;
		
		private string _InvoiceDateEx;
		
		private string _KindName;
		
		private string _CreatedDateEx;
		
		public ProductSaleItemView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityDiscount", DbType="Real")]
		public System.Nullable<float> QuantityDiscount
		{
			get
			{
				return this._QuantityDiscount;
			}
			set
			{
				if ((this._QuantityDiscount != value))
				{
					this._QuantityDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductSale", DbType="Int")]
		public System.Nullable<int> IdProductSale
		{
			get
			{
				return this._IdProductSale;
			}
			set
			{
				if ((this._IdProductSale != value))
				{
					this._IdProductSale = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObjectCareDetail", DbType="Int")]
		public System.Nullable<int> IdObjectCareDetail
		{
			get
			{
				return this._IdObjectCareDetail;
			}
			set
			{
				if ((this._IdObjectCareDetail != value))
				{
					this._IdObjectCareDetail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUnit", DbType="Int NOT NULL")]
		public int IdUnit
		{
			get
			{
				return this._IdUnit;
			}
			set
			{
				if ((this._IdUnit != value))
				{
					this._IdUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="BigInt")]
		public System.Nullable<long> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this._IdStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="BigInt")]
		public System.Nullable<long> IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this._IdCustomer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="BigInt")]
		public System.Nullable<long> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateEx", DbType="NVarChar(50)")]
		public string InvoiceDateEx
		{
			get
			{
				return this._InvoiceDateEx;
			}
			set
			{
				if ((this._InvoiceDateEx != value))
				{
					this._InvoiceDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindName", DbType="NVarChar(50)")]
		public string KindName
		{
			get
			{
				return this._KindName;
			}
			set
			{
				if ((this._KindName != value))
				{
					this._KindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(50)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this._CreatedDateEx = value;
				}
			}
		}

        public int RowNumber { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSaleItemView1")]
	public partial class ProductSaleItemView1
	{
		
		private string _Code;
		
		private string _Name;
		
		private int _IdUnit;
		
		private string _UnitName;
		
		private System.Nullable<long> _CreatedDate;
		
		private string _InvoiceNo;
		
		private System.Nullable<long> _IdStaff;
		
		private System.Nullable<long> _IdCustomer;
		
		private System.Nullable<long> _InvoiceDate;
		
		private string _InvoiceDateEx;
		
		private string _KindName;
		
		private string _CreatedDateEx;
		
		private System.Nullable<long> _IdProductSale;
		
		private string _CodeEx;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<float> _QuantityDiscount;
		
		private string _Expr3;
		
		private System.Nullable<decimal> _Price;
		
		private string _CustomerName;
		
		private string _StaffName;
		
		public ProductSaleItemView1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUnit", DbType="Int NOT NULL")]
		public int IdUnit
		{
			get
			{
				return this._IdUnit;
			}
			set
			{
				if ((this._IdUnit != value))
				{
					this._IdUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="BigInt")]
		public System.Nullable<long> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="BigInt")]
		public System.Nullable<long> IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this._IdStaff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="BigInt")]
		public System.Nullable<long> IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this._IdCustomer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="BigInt")]
		public System.Nullable<long> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateEx", DbType="NVarChar(50)")]
		public string InvoiceDateEx
		{
			get
			{
				return this._InvoiceDateEx;
			}
			set
			{
				if ((this._InvoiceDateEx != value))
				{
					this._InvoiceDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindName", DbType="NVarChar(50)")]
		public string KindName
		{
			get
			{
				return this._KindName;
			}
			set
			{
				if ((this._KindName != value))
				{
					this._KindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateEx", DbType="NVarChar(50)")]
		public string CreatedDateEx
		{
			get
			{
				return this._CreatedDateEx;
			}
			set
			{
				if ((this._CreatedDateEx != value))
				{
					this._CreatedDateEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductSale", DbType="BigInt")]
		public System.Nullable<long> IdProductSale
		{
			get
			{
				return this._IdProductSale;
			}
			set
			{
				if ((this._IdProductSale != value))
				{
					this._IdProductSale = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeEx", DbType="NVarChar(50)")]
		public string CodeEx
		{
			get
			{
				return this._CodeEx;
			}
			set
			{
				if ((this._CodeEx != value))
				{
					this._CodeEx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityDiscount", DbType="Real")]
		public System.Nullable<float> QuantityDiscount
		{
			get
			{
				return this._QuantityDiscount;
			}
			set
			{
				if ((this._QuantityDiscount != value))
				{
					this._QuantityDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr3", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Expr3
		{
			get
			{
				return this._Expr3;
			}
			set
			{
				if ((this._Expr3 != value))
				{
					this._Expr3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this._StaffName = value;
				}
			}
		}
	}
	
	public partial class ProcIsEditProductResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _IdProduct;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<float> _Quantity;
		
		private System.Nullable<float> _Amount;
		
		private System.Nullable<long> _IdProductPurchase;
		
		private System.Nullable<long> _IdInventory;
		
		public ProcIsEditProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="BigInt")]
		public System.Nullable<long> IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this._IdProduct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Real")]
		public System.Nullable<float> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real")]
		public System.Nullable<float> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductPurchase", DbType="BigInt")]
		public System.Nullable<long> IdProductPurchase
		{
			get
			{
				return this._IdProductPurchase;
			}
			set
			{
				if ((this._IdProductPurchase != value))
				{
					this._IdProductPurchase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInventory", DbType="BigInt")]
		public System.Nullable<long> IdInventory
		{
			get
			{
				return this._IdInventory;
			}
			set
			{
				if ((this._IdInventory != value))
				{
					this._IdInventory = value;
				}
			}
		}
	}
	
	public partial class ProcIsAddProductResult
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<decimal> _PriceIn;
		
		private System.Nullable<decimal> _PriceOut;
		
		private int _IdUnit;
		
		private System.Nullable<int> _IdProductColor;
		
		private System.Nullable<int> _IdProductKind;
		
		private int _IdGroup;
		
		private int _IdManufacture;
		
		private string _InventoryType;
		
		public ProcIsAddProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="Money")]
		public System.Nullable<decimal> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this._PriceIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this._PriceOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUnit", DbType="Int NOT NULL")]
		public int IdUnit
		{
			get
			{
				return this._IdUnit;
			}
			set
			{
				if ((this._IdUnit != value))
				{
					this._IdUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductColor", DbType="Int")]
		public System.Nullable<int> IdProductColor
		{
			get
			{
				return this._IdProductColor;
			}
			set
			{
				if ((this._IdProductColor != value))
				{
					this._IdProductColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductKind", DbType="Int")]
		public System.Nullable<int> IdProductKind
		{
			get
			{
				return this._IdProductKind;
			}
			set
			{
				if ((this._IdProductKind != value))
				{
					this._IdProductKind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGroup", DbType="Int NOT NULL")]
		public int IdGroup
		{
			get
			{
				return this._IdGroup;
			}
			set
			{
				if ((this._IdGroup != value))
				{
					this._IdGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdManufacture", DbType="Int NOT NULL")]
		public int IdManufacture
		{
			get
			{
				return this._IdManufacture;
			}
			set
			{
				if ((this._IdManufacture != value))
				{
					this._IdManufacture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NVarChar(50)")]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					this._InventoryType = value;
				}
			}
		}
	}
	
	public partial class ProcGenerateProductsResult
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<decimal> _PriceIn;
		
		private System.Nullable<decimal> _PriceOut;
		
		private int _IdUnit;
		
		private System.Nullable<int> _IdProductColor;
		
		private System.Nullable<int> _IdProductKind;
		
		private int _IdGroup;
		
		private int _IdManufacture;
		
		private string _InventoryType;
		
		public ProcGenerateProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIn", DbType="Money")]
		public System.Nullable<decimal> PriceIn
		{
			get
			{
				return this._PriceIn;
			}
			set
			{
				if ((this._PriceIn != value))
				{
					this._PriceIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOut", DbType="Money")]
		public System.Nullable<decimal> PriceOut
		{
			get
			{
				return this._PriceOut;
			}
			set
			{
				if ((this._PriceOut != value))
				{
					this._PriceOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUnit", DbType="Int NOT NULL")]
		public int IdUnit
		{
			get
			{
				return this._IdUnit;
			}
			set
			{
				if ((this._IdUnit != value))
				{
					this._IdUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductColor", DbType="Int")]
		public System.Nullable<int> IdProductColor
		{
			get
			{
				return this._IdProductColor;
			}
			set
			{
				if ((this._IdProductColor != value))
				{
					this._IdProductColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductKind", DbType="Int")]
		public System.Nullable<int> IdProductKind
		{
			get
			{
				return this._IdProductKind;
			}
			set
			{
				if ((this._IdProductKind != value))
				{
					this._IdProductKind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGroup", DbType="Int NOT NULL")]
		public int IdGroup
		{
			get
			{
				return this._IdGroup;
			}
			set
			{
				if ((this._IdGroup != value))
				{
					this._IdGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdManufacture", DbType="Int NOT NULL")]
		public int IdManufacture
		{
			get
			{
				return this._IdManufacture;
			}
			set
			{
				if ((this._IdManufacture != value))
				{
					this._IdManufacture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NVarChar(50)")]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					this._InventoryType = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
